plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.physicaltherapy'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('queryDslVersion', "6.2")
    set('springCloudVersion', "2023.0.1")
    set('mapstructVersion', "1.5.5.Final")
}

dependencies {
    // Presentation
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // Persistence
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "io.github.openfeign.querydsl:querydsl-jpa-spring:${queryDslVersion}"
    implementation 'org.postgresql:postgresql'
    implementation 'org.axonframework:axon-spring-boot-starter:4.9.3'

    // development
    developmentOnly 'org.springframework.boot:spring-boot-docker-compose'

    // Boiler Plate
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'

    annotationProcessor(
            'org.springframework.boot:spring-boot-configuration-processor',
            "io.github.openfeign.querydsl:querydsl-jpa-spring:${queryDslVersion}",
            'org.projectlombok:lombok',
            "org.mapstruct:mapstruct-processor:${mapstructVersion}",
            'org.projectlombok:lombok-mapstruct-binding:0.2.0'
    )

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
